---
  name: Deploy infrastructure
  on: 
    push: 
      branches: 
        - main
      paths: 
        - terraform/**
    workflow_dispatch:
  
  env: 
    AWS_REGION: us-east-1
    AWS_DEV_ACCOUNT_NUMBER: ${{ secrets.AWS_DEV_ACCOUNT_NUMBER }}
    AWS_PREPROD_ACCOUNT_NUMBER: ${{ secrets.AWS_PREPROD_ACCOUNT_NUMBER }}
    AWS_PROD_ACCOUNT_NUMBER: ${{ secrets.AWS_PROD_ACCOUNT_NUMBER }}
    AWS_ROLE_NAME: "aws-github-oidc-role"
    S3_PREFIX: "mlops-terraform-state"
    DYNAMODB_PREFIX: "mlops-terraform-state-locks"
    PAT_GITHUB: ${{ secrets.PAT_GITHUB }}
  
  jobs:
    tf-apply-dev:
      name: Terraform Apply Dev
      runs-on: ubuntu-latest
      strategy:
        matrix:
          business_unit: ["business_unit_1"] 
      permissions: 
        id-token: write
        contents: read
      steps: 
        - uses: actions/checkout@v3
        - uses: hashicorp/setup-terraform@v2
          with: 
            terraform_version: 1.5.2
  
        - name: Debug - Print Environment Variables
          run: |
            echo "AWS_DEV_ACCOUNT_NUMBER=${{ secrets.AWS_DEV_ACCOUNT_NUMBER }}"
            echo "AWS_PREPROD_ACCOUNT_NUMBER=${{ secrets.AWS_PREPROD_ACCOUNT_NUMBER }}"
            echo "AWS_PROD_ACCOUNT_NUMBER=${{ secrets.AWS_PROD_ACCOUNT_NUMBER }}"
            echo "AWS_REGION=${{ env.AWS_REGION }}"
            echo "AWS_ROLE_NAME=${{ env.AWS_ROLE_NAME }}"
            echo "S3_BUCKET=${{ env.S3_PREFIX }}-dev-${{ env.AWS_REGION }}-${{ env.AWS_DEV_ACCOUNT_NUMBER }}"
            echo "DYNAMODB_TABLE=${{ env.DYNAMODB_PREFIX }}-dev"
  
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with: 
            role-to-assume: arn:aws:iam::${{ env.AWS_DEV_ACCOUNT_NUMBER }}:role/${{ env.AWS_ROLE_NAME }}
            aws-region: ${{ env.AWS_REGION }}
  
        - name: Terraform Apply Dev
          run: | 
            make tf-apply env=dev \
            bucket=${{ env.S3_PREFIX }}-dev-${{ env.AWS_REGION }}-${{ env.AWS_DEV_ACCOUNT_NUMBER }} \
            region=${{ env.AWS_REGION }} \
            key=mlops-terraform-dev.state \
            table=${{ env.DYNAMODB_PREFIX }}-dev \
            pat_github=${{ env.PAT_GITHUB }}
  
    tf-apply-preprod: 
      name: Terraform Apply PreProd
      runs-on: ubuntu-latest
      strategy:
        matrix:
          business_unit: ["business_unit_1"] 
      permissions: 
        id-token: write
        contents: read
      steps: 
        - uses: actions/checkout@v3
        - uses: hashicorp/setup-terraform@v2
          with: 
            terraform_version: 1.5.2
  
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with: 
            role-to-assume: arn:aws:iam::${{ env.AWS_PREPROD_ACCOUNT_NUMBER }}:role/${{ env.AWS_ROLE_NAME }}
            aws-region: ${{ env.AWS_REGION }}
  
        - name: Terraform Apply PreProd
          run: | 
            make tf-apply env=preprod \
            bucket=${{ env.S3_PREFIX }}-preprod-${{ env.AWS_REGION }}-${{ env.AWS_PREPROD_ACCOUNT_NUMBER }} \
            region=${{ env.AWS_REGION }} \
            key=mlops-terraform-preprod.state \
            table=${{ env.DYNAMODB_PREFIX }}-preprod \
            pat_github=${{ env.PAT_GITHUB }}
  
    tf-apply-prod: 
      name: Terraform Apply Prod
      runs-on: ubuntu-latest
      strategy:
        matrix:
          business_unit: ["business_unit_1"] 
      permissions: 
        id-token: write
        contents: read
      steps: 
        - uses: actions/checkout@v3
        - uses: hashicorp/setup-terraform@v2
          with: 
            terraform_version: 1.5.2
  
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with: 
            role-to-assume: arn:aws:iam::${{ env.AWS_PROD_ACCOUNT_NUMBER }}:role/${{ env.AWS_ROLE_NAME }}
            aws-region: ${{ env.AWS_REGION }}
  
        - name: Terraform Apply Prod
          run: | 
            make tf-apply env=prod \
            bucket=${{ env.S3_PREFIX }}-prod-${{ env.AWS_REGION }}-${{ env.AWS_PROD_ACCOUNT_NUMBER }} \
            region=${{ env.AWS_REGION }} \
            key=mlops-terraform-prod.state \
            table=${{ env.DYNAMODB_PREFIX }}-prod \
            pat_github=${{ env.PAT_GITHUB }}